https://www.memphis.edu/cs/courses/syllabi/4019.pdf
comp
competitive
programming
technical
int
erviews
fall
time
place
instructor
ce
hour
website
description
prerequisite
textbook
grading
wednesday
pm
pm
dunn
hall
thomas
watson
dunn
hall
thomas
watson
memphis
edu
http
www
c
memphis
edu
twwtson
wednesday
pm
pm
http
elearn
memphis
edu
credit
course
learn
skill
needed
articipating
programming
competition
acm
international
col
legiate
pro
gramming
contest
icpc
whiteboard
coding
intervi
ew
large
tech
company
theseskillsincludeuncoveringthecorecomputational
ta
kunderlyingaprob
lem
description
recognizing
problem
category
ass
sing
di
culty
ap
plying
known
algorithm
data
structure
practicing
wi
th
online
judge
developing
test
case
using
standard
library
coding
qu
ickly
correctly
anticipating
corner
case
using
strategy
team
progr
amming
analyz
ing
algorithm
ciency
interview
speci
skill
include
verbally
explaining
thought
process
dur
ing
problem
solving
writing
bug
free
code
without
hel
ides
tool
gracefully
salvaging
situation
one
get
tuck
speci
technical
topic
include
binary
search
simulatio
problem
bit
nipulation
standardlibrarydatastructures
recursivea
lgorithms
graphtraver
sal
dynamicprogramming
computational
geometry
linked
list
manipulation
tree
traversal
comp
object
oriented
programming
data
structure
recommended
cracking
coding
interview
gayle
laakmann
mcdowell
guide
competitive
programming
antti
laaksonen
free
online
version
called
competitive
programmer
handbook
grade
completion
weekly
programming
assignment
drawn
problem
online
judge
onlinejudge
org
program
ming
must
done
java
one
one
mo
ck
interview
instructor
toward
end
semester
cheating
calendar
participation
actual
acm
programming
contest
opti
onal
encour
aged
tl
dr
may
discus
problem
look
upge
neral
advice
solving
type
problem
submit
code
wrote
particular
look
solution
assi
gned
problem
internet
copy
code
classmate
plagiarism
cheating
behavior
form
unethical
detrimental
proper
education
tolerated
work
submitt
ed
student
project
programming
assignment
lab
assignment
qui
zzes
test
etc
expected
student
work
plagiarism
incurr
ed
part
anybody
else
work
passed
proper
cr
edit
listed
source
work
reader
led
believe
therefore
ort
student
allowed
encouraged
discus
look
resource
literature
appropria
te
reference
must
included
material
consulted
appropriate
ci
tations
made
material
taken
verbatim
plagiarism
cheating
occurs
student
receive
failing
grade
assignment
instructor
discretion
failing
rade
course
course
instructor
may
also
decide
forward
inciden
ce
student
conduct
disciplinary
action
aug
introduction
using
online
judge
sep
binary
search
sep
simulation
problem
sep
bit
manipulation
sep
standard
library
data
structure
sep
recursive
algorithm
oct
graph
traversal
oct
dynamic
programming
oct
computational
geometry
oct
linked
list
manipulation
nov
tree
traversal
nov
mock
interview
nov
class
